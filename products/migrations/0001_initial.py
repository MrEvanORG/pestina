# Generated by Django 5.1.1 on 2025-07-15 13:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='نام دسته بندی')),
                ('slug', models.SlugField(unique=True, verbose_name='اسلاگ (ساخن خودکار از روی اسم کتگوری)')),
                ('discription', models.CharField(max_length=300, verbose_name='توضیحات دسته بندی')),
                ('photo', models.ImageField(upload_to='blog-photos/covers-category/', verbose_name='کاور دسته بندی')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=20, verbose_name='نام کاربر')),
                ('last_name', models.CharField(max_length=20, verbose_name='نام خانوادگی کاربر')),
                ('phone_number', models.CharField(max_length=15, unique=True, verbose_name='شماره تلفن کاربر')),
                ('is_verified', models.BooleanField(default=False, verbose_name='وضعیت تایید شدن شماره تلغن')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='آیپی کاربر هنگام ثبت نام')),
                ('register_time', models.DateTimeField(auto_now=True, verbose_name='زمان ثبت نام')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='عنوان')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('content_blocks', models.JSONField(default=list, verbose_name='بلاک های محتوا')),
                ('cover_image', models.ImageField(upload_to='blog-photos/covers/', verbose_name='کاور پست')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='blog-photos/images/', verbose_name='عکس 1')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='blog-photos/images/', verbose_name='عکس 2')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='blog-photos/images/', verbose_name='عکس 3')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='blog-photos/images/', verbose_name='عکس 4')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='blog-photos/images/', verbose_name='عکس 5')),
                ('image6', models.ImageField(blank=True, null=True, upload_to='blog-photos/images/', verbose_name='عکس 6')),
                ('image7', models.ImageField(blank=True, null=True, upload_to='blog-photos/images/', verbose_name='عکس 7')),
                ('views', models.PositiveIntegerField(default=0)),
                ('time_to_read', models.IntegerField(default=3, verbose_name='زمان تقریبی خواندن (به دقیقه)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='وضعیت تایید شدن توسط ادمین')),
                ('auther', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='نویسنده')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.blogcategories', verbose_name='دسته بندی')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='برچسب ها (با , جداکنید)')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='آیدی محصول')),
                ('photo', models.ImageField(upload_to='prdphotos', verbose_name='عکس محصول')),
                ('kind', models.CharField(choices=[('akbari', 'اکبری'), ('fandoghi', 'فندوقی'), ('ahmadaghaii', 'احمد آقایی'), ('kaleghoochi', 'کله قوچی'), ('shahpasand', 'شاه پسند'), ('sefid', 'سفید'), ('badami', 'بادامی'), ('khanjari', 'خنجری'), ('makhloot', ' مخلوط')], max_length=20, verbose_name='نوع پسته')),
                ('status', models.CharField(choices=[('khandan', 'خندان'), ('dahanbast', 'دهن بست'), ('abkhandan', 'آب خندان'), ('tarkibi', 'ترکیبی')], max_length=20, verbose_name='وضعیت محصول')),
                ('ounce', models.PositiveIntegerField(verbose_name='انس محصول')),
                ('quality', models.CharField(choices=[('d1', 'درجه یک'), ('d2', 'درجه دو'), ('d3', 'درجه سه'), ('d4', 'درجه چهار')], max_length=20, verbose_name='(کیفی) کیفیت محصول')),
                ('price', models.DecimalField(decimal_places=0, max_digits=13, verbose_name='(تومان) قیمت محصول')),
                ('show_inventory', models.BooleanField(default=True, verbose_name='وضعیت نمایش وزن محصول')),
                ('inventory', models.FloatField(verbose_name='وزن محصول')),
                ('min_order', models.FloatField(blank=True, null=True, verbose_name='حداقل سفارش (کیلوگرم - خالی برای بدون محدودیت)')),
                ('max_order', models.FloatField(blank=True, null=True, verbose_name='حداکثر سفارش (کیلوگرم - خالی برای بدون محدودیت)')),
                ('discription', models.CharField(blank=True, max_length=500, null=True, verbose_name='توضیحات بیشتر برای محصول')),
                ('free_shipping', models.BooleanField(default=False, verbose_name='ارسال رایگان')),
                ('shipping_cost', models.DecimalField(blank=True, decimal_places=0, max_digits=13, null=True, verbose_name='(تومان) هزینه ارسال')),
                ('is_pestina_product', models.BooleanField(default=False, verbose_name='محصول پستینا')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='وضعیت تایید شدن توسط ادمین')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='آیپی')),
                ('upload_time', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ثبت محصول')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
        ),
        migrations.CreateModel(
            name='BuyTicket',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='شماره سفارش')),
                ('name', models.CharField(max_length=30, verbose_name='نام خریدار')),
                ('phone', models.CharField(max_length=20, verbose_name='شماره تلفن')),
                ('gain', models.FloatField(verbose_name='مقدار (به کیلو)')),
                ('price', models.FloatField(verbose_name='قیمت نهایی')),
                ('post_code', models.BigIntegerField(verbose_name='کد پستی')),
                ('address', models.CharField(max_length=1500, verbose_name='آدرس')),
                ('buy_time', models.DateTimeField(auto_now=True, verbose_name='تاریخ سفارش')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='آیپی')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product', verbose_name='محصول سفارش داده شده')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False, verbose_name='شماره تیکت')),
                ('buyer_namelastname', models.CharField(max_length=30, verbose_name='نام خریدار')),
                ('buyer_phone', models.CharField(max_length=20, verbose_name='شماره تلفن')),
                ('ticket_type', models.CharField(choices=[('feedback', 'نظرات و پیشنهادات'), ('purchase', 'درخواست خرید محصول'), ('technical', 'نقص فنی سایت')], max_length=20, verbose_name='نوع تیکت')),
                ('request_title', models.CharField(max_length=20, verbose_name='عنوان تیکت')),
                ('request_discription', models.CharField(max_length=150, verbose_name='متن درخواست')),
                ('ticket_time', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ثبت تیکت')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='أیپی')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
        ),
    ]
